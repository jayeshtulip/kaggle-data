# Control Model Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loan-model-control
  namespace: loan-default
  labels:
    app: loan-model
    variant: control
spec:
  replicas: 2
  selector:
    matchLabels:
      app: loan-model
      variant: control
  template:
    metadata:
      labels:
        app: loan-model
        variant: control
    spec:
      containers:
      - name: control-model
        image: python:3.9-slim
        command: ["/bin/bash"]
        args:
        - -c
        - |
          echo "Installing dependencies..."
          pip install --no-cache-dir fastapi uvicorn prometheus_client scikit-learn pandas numpy joblib
          echo "Starting Control Model API..."
          cd /app
          export MODEL_VARIANT=control
          export MODEL_VERSION=v1.0
          python -m uvicorn api_prometheus:app --host 0.0.0.0 --port 8002
        env:
        - name: PORT
          value: "8002"
        - name: MODEL_VARIANT
          value: "control"
        - name: MODEL_VERSION
          value: "v1.0"
        ports:
        - containerPort: 8002
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 120
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 60
          periodSeconds: 5
        volumeMounts:
        - mountPath: /app
          name: app-code
        workingDir: /app
      volumes:
      - configMap:
          name: loan-api-code
        name: app-code

---
# Treatment Model Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loan-model-treatment
  namespace: loan-default
  labels:
    app: loan-model
    variant: treatment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: loan-model
      variant: treatment
  template:
    metadata:
      labels:
        app: loan-model
        variant: treatment
    spec:
      containers:
      - name: treatment-model
        image: python:3.9-slim
        command: ["/bin/bash"]
        args:
        - -c
        - |
          echo "Installing dependencies..."
          pip install --no-cache-dir fastapi uvicorn prometheus_client scikit-learn pandas numpy joblib
          echo "Starting Treatment Model API..."
          cd /app
          export MODEL_VARIANT=treatment
          export MODEL_VERSION=v2.0
          python -m uvicorn api_prometheus:app --host 0.0.0.0 --port 8002
        env:
        - name: PORT
          value: "8002"
        - name: MODEL_VARIANT
          value: "treatment"
        - name: MODEL_VERSION
          value: "v2.0"
        ports:
        - containerPort: 8002
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 120
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 60
          periodSeconds: 5
        volumeMounts:
        - mountPath: /app
          name: app-code
        workingDir: /app
      volumes:
      - configMap:
          name: loan-api-code
        name: app-code

---
# Control Model Service with Load Balancer
apiVersion: v1
kind: Service
metadata:
  name: loan-model-control-lb
  namespace: loan-default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-name: "loan-control-model-lb"
spec:
  type: LoadBalancer
  selector:
    app: loan-model
    variant: control
  ports:
  - name: http
    port: 80
    targetPort: 8002
    protocol: TCP

---
# Treatment Model Service with Load Balancer
apiVersion: v1
kind: Service
metadata:
  name: loan-model-treatment-lb
  namespace: loan-default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-name: "loan-treatment-model-lb"
spec:
  type: LoadBalancer
  selector:
    app: loan-model
    variant: treatment
  ports:
  - name: http
    port: 80
    targetPort: 8002
    protocol: TCP